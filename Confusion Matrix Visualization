from sklearn import svm
import numpy as np
from sklearn.metrics import confusion_matrix

classifier = svm.SVC(kernel = 'linear',C = 0.01) # build a SVC model
y_pred = classifier.fit(X_train,y_train).predict(X_test)

def plot_confusion_matrix(cm,title = 'Confusion matrix',cmap =plt.cm.Blues):
    plt.imshow(cm,interpolation = 'nearest',cmap = cmap) # used to draw a heat map
    plt.title(title)
    plt.colorbar()
    tick_marks = np.arange(len(iris.target_names))
    plt.xticks(tick_marks,iris.target_names,rotation = 45)
    plt.yticks(tick_marks,iris.target_names)
    plt.tight_layout() # make sublots compact and prevent from intervention
    plt.ylabel('True label')
    plt.xlabel('Predicted label')
    
cm = confusion_matrix(y_test,y_pred) # the output is a array indicating a confusion matrix
np.set_printoptions(precision = 2)
plt.figure()
plot_confusion_matrix(cm)
